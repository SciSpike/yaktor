/*
 * This is a simple demo of Yaktor.
 * The demo describes two simple agents:
 *
 * - Switch. Represents a simple switch that when receiving a command to 'flip' turns itself on or off
 * - Outlet. Represents some electrical outlet controlled by the switch
 */ 
conversation demo {

  /*
   * The Circuit is what we call a `conversation type`. 
   * Agents collaborate over the same instance of an object; here, the object is an instance of a Circuit.
   */
  type Circuit {
    String name!
  }

  /*
   * A simple switch agent
   */
  infinite agent Switch concerning Circuit {
    privately receives flip
    sends turnOn
    sends turnOff

    initially becomes off {
      on {
        flip -> off > turnOff
      }
      off {
        flip -> on > turnOn
      }
    }
  }

  /*
   * A simple electrical outlet agent
   */
  infinite agent Outlet concerning Circuit {

    initially becomes off {
      off {
        Switch.turnOn -> flowing
      }
      flowing {
        Switch.turnOff -> off
      }
    }
  }
  resource /circuit for demo.Circuit offers anonymous ( create read update delete find ) interchanges ( json )

}
